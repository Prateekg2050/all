void main()=> runApp(
  MaterialApp(
    home: Scaffold(
   appBar: AppBar( title: Text("Quiz App")),
   body: QuizApp()
    )
  )
);




class Question{
  final String questionText;
  final bool answer;
  Question({required this.questionText,required this.answer});
}

class Questions{
  List<Question> qBank = [
    Question(questionText: "oxygen is solid ?", answer: false),
    Question(questionText: "The capital of Australia is Sydney ?", answer: true),
    Question(questionText: "Bill Gates is the founder of microsoft?", answer: true)
  ];
}

class QuizApp extends StatefulWidget {
  const QuizApp({Key? key}) : super(key: key);

  @override
  State<QuizApp> createState() => _QuizAppState();
}

class _QuizAppState extends State<QuizApp> {

  int questionNumber = 0;
  int currentScore = 0;

  Questions questions = Questions();


  void updateQuestionState(){
    setState(() {
      questionNumber = questionNumber+1;
    });
  }

  void updateCurrentScore(bool choice,int questionNumber){

    if(questions.qBank.length == questionNumber)
      {
        print("End of question !");
      }else
        {
    if(choice == questions.qBank[questionNumber].answer)
      {
        setState(() {
          currentScore = currentScore+1;
        });
      }
        }
  }

  bool checkValidQuestion(int questionNumber)
  {
    return questionNumber < questions.qBank.length?true:false;
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      child: Column(
        children: [
          Center(child: Text( checkValidQuestion(questionNumber)?questions.qBank[questionNumber].questionText:"end!")),
          SizedBox(width: 20.0,),
          if(checkValidQuestion(questionNumber))
            ElevatedButton(onPressed: (() {
              setState(() {
                if(questions.qBank.length == questionNumber)
                  {
                    print("End !");
                  }
                else {
                  updateCurrentScore(true, questionNumber);
                  updateQuestionState();
                  }
              });
            }), child: Text("True")),
          SizedBox(width: 20.0),
          if(checkValidQuestion(questionNumber))
            ElevatedButton(onPressed: (() {
              setState(() {
                if(questions.qBank.length == questionNumber)
                  {
                    print("End!");
                  }
                else
                  {
                    updateCurrentScore(false, questionNumber);
                    updateQuestionState();
                  }

              });
            }), child: Text("False")),
          SizedBox(width:20.0),
          Center(child: Text("Current Score"),),
          SizedBox(width: 20.0,),
          Center(child: Text("$currentScore"),)
        ],
  ),
  );
}
}
